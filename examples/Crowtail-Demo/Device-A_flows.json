[
    {
        "id": "e6f0c418d7ddc4e9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9c7a5c031c76202b",
        "type": "rpi-gpio in",
        "z": "e6f0c418d7ddc4e9",
        "name": "Switch",
        "pin": "12",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 70,
        "y": 360,
        "wires": [
            [
                "c47cdd998017ff83"
            ]
        ]
    },
    {
        "id": "9f33102487ab7468",
        "type": "rpi-gpio out",
        "z": "e6f0c418d7ddc4e9",
        "name": "LED Green",
        "pin": "21",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 950,
        "y": 480,
        "wires": []
    },
    {
        "id": "c47cdd998017ff83",
        "type": "function",
        "z": "e6f0c418d7ddc4e9",
        "name": "Invertor",
        "func": "// Invert a GPIO state and output 0/1\n\nconst v = msg.payload;\nlet asBool;\n\n// normalize to boolean\nif (typeof v === 'boolean') {\n  asBool = v;\n} else if (typeof v === 'number') {\n  asBool = v !== 0;\n} else if (typeof v === 'string') {\n  const s = v.trim().toLowerCase();\n  asBool = (s === '1' || s === 'true' || s === 'on' || s === 'high');\n} else {\n  asBool = false; // default if unknown\n}\n\n// invert and return as 0/1 for rpi-gpio out\nmsg.payload = asBool ? 1 : 0;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 360,
        "wires": [
            [
                "fced533a770bd4ed",
                "aa25a0688ae1d47a"
            ]
        ]
    },
    {
        "id": "f01d4dbefe85d8e0",
        "type": "edgeberry",
        "z": "e6f0c418d7ddc4e9",
        "name": "",
        "x": 570,
        "y": 420,
        "wires": [
            [
                "28707c2e2732e5d0"
            ]
        ]
    },
    {
        "id": "fced533a770bd4ed",
        "type": "function",
        "z": "e6f0c418d7ddc4e9",
        "name": "Convertor",
        "func": "msg.topic = \"telemetry\";\nlet value = msg.payload;\nmsg.payload = {};\nmsg.payload.value = value;\nmsg.payload.device = \"switch\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "f01d4dbefe85d8e0"
            ]
        ]
    },
    {
        "id": "28707c2e2732e5d0",
        "type": "function",
        "z": "e6f0c418d7ddc4e9",
        "name": "Toggle Lights",
        "func": "if( msg.payload.testkey ){\n    let mainLights = context.get('mainLights');\n    mainLights = !mainLights;\n    context.set('mainLights', mainLights);\n    return { payload:mainLights }; \n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 480,
        "wires": [
            [
                "9f33102487ab7468"
            ]
        ]
    },
    {
        "id": "aa25a0688ae1d47a",
        "type": "rpi-gpio out",
        "z": "e6f0c418d7ddc4e9",
        "name": "Digital Out 3",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 410,
        "y": 360,
        "wires": []
    },
    {
        "id": "b8ce1cf1d32ae5a6",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-node-pi-gpio": "2.0.6",
            "@edgeberry/device-node-red-contrib": "3.3.0"
        }
    }
]